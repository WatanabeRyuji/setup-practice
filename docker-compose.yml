services:
    nginx:
        build: ".docker/local/nginx"
        container_name: laravel-setup-practice
        ports:
            - "80:80"
        volumes:
            - ./public:/app/public
            - ./.docker/local/nginx/nginx.conf:/etc/nginx/nginx.conf
        depends_on:
            - app

    app:
        build: ".docker/local/php"
        container_name: laravel-setup-practice-app
        working_dir: /app
        volumes:
            - ".:/app"
            - "./.docker/local/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
        ports:
            - "5173:5173"
        environment:
            - USER_NAME
            - USER_ID
            - GROUP_NAME
            - GROUP_ID
            - OS_NAME
        depends_on:
            - mysql
            - redis
            - minio
            - mailpit
        extra_hosts:
            - "host.docker.internal:host-gateway"

    queue_worker:
        build: ".docker/local/php"
        container_name: laravel-setup-practice-queue-worker
        command: "php artisan queue:work --tries=3 --queue=high,default,low"
        environment:
            - USER_NAME
            - USER_ID
            - GROUP_NAME
            - GROUP_ID
            - OS_NAME
        volumes:
            - ".:/app"
            - "./.docker/local/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
        depends_on:
            - mysql
            - redis
            - minio
            - mailpit
        extra_hosts:
            - "host.docker.internal:host-gateway"

    mysql:
        container_name: laravel-setup-practice-mysql
        platform: linux/amd64
        build: ".docker/local/mysql"
        ports:
            - "3306:3306"
        volumes:
            - ".docker/local/mysql/my.cnf:/etc/mysql/my.cnf"
            - "./storage/mysql:/var/lib/mysql"
            - ".docker/local/mysql/mysql-docker-entrypoint.sql:/docker-entrypoint-initdb.d/mysql-docker-entrypoint.sql"
        environment:
            MYSQL_DATABASE: laravel_setup_practice
            MYSQL_USER: laravel_setup_practice
            MYSQL_PASSWORD: password
            MYSQL_ROOT_PASSWORD: password

    redis:
        image: redis:6.2-buster
        container_name: laravel-setup-practice-redis
        ports:
            - "6379:6379"

    mailpit:
        image: mailhog/mailhog
        container_name: laravel-setup-practice-mailpit
        ports:
            - "8025:8025"

    minio:
        image: minio/minio
        container_name: laravel-setup-practice-minio
        ports:
            - "9001:9001"
            - "9002:9002"
        environment:
            MINIO_ROOT_USER: access_key
            MINIO_ROOT_PASSWORD: secret_key
        entrypoint: bash
        command: -c "/opt/bin/minio server /export --address :9001 --console-address :9002"

    create-bucket:
        container_name: laravel-setup-practice-create-bucket
        image: minio/mc
        entrypoint: [ "" ]
        command:
            - /bin/sh
            - -c
            - |
                until (mc config host add minio http://minio:9001 access_key secret_key) do echo 'wait until add host' && sleep 1; done;
                mc mb minio/public
                mc policy set public minio/public
                mc mb minio/private
                mc policy set private minio/private
                mc mb minio/uploads
                mc policy set private minio/uploads
        environment:
            MINIO_ROOT_USER: access_key
            MINIO_ROOT_PASSWORD: secret_key
        depends_on:
            - minio

    openapi:
        container_name: laravel-setup-practice-openapi
        image: swaggerapi/swagger-ui:latest
        tty: true
        volumes:
            - "./dist/:/var/openapi"
        environment:
            SWAGGER_JSON: /var/openapi/openapi.json
        ports:
            - "8080:8080"
